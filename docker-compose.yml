# here we will do such that 
# docker build -t  image .
#/*docker run --name express-nodeapp .-container -v ${pwd}/src:/app/src:ro   -d -p 7000:3000  
# express-node-app*/
 
# 1)type your docker compose version
version: "3.8"
#2) build img and run  container with hot reload
services:
  express-node-app:
  
  
    
    #container_name: express-node-container
   # ports:
   #   - 3000:3000
    env_file:
      - ./.env
    depends_on:
      - mongo  
    restart: unless-stopped
    
  mongo:
    image: mongo
    container_name: mongo-container
    volumes:
      - mongo-db:/data/db
   
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    restart: unless-stopped  
    

  mongo-express:
    image: mongo-express
    container_name: mongo-express-container
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_URL: mongodb://root:example@mongo:27017
      ME_CONFIG_BASICAUTH_USERNAME: mexpress
      ME_CONFIG_BASICAUTH_PASSWORD: mexpress

    depends_on:
      - mongo   
    restart: unless-stopped

  redis:

    image: redis
    container_name: redis-container
    ports:
      - 6379:6379
    restart: unless-stopped

  nginx:
      image: nginx:stable-alpine
      container_name: nginx-container
      volumes:
        - ./nginx/default.conf:/etc/nginx/conf.d/default.conf 
      ports:
      - "80:80"
      environment:
      - NGINX_PORT=80
      restart: unless-stopped
     
      depends_on:
        - express-node-app
    
      
volumes:
  mongo-db:

  
 